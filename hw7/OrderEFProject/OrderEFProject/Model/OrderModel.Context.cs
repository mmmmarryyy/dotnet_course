//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrderEFProject.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OrderDBEntities : DbContext
    {
        public OrderDBEntities()
            : base("name=OrderDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Order> Order { get; set; }
        public virtual DbSet<orderitem> orderitem { get; set; }
        public virtual DbSet<product> product { get; set; }
    
        public virtual int Order_Delete(Nullable<int> o_id)
        {
            var o_idParameter = o_id.HasValue ?
                new ObjectParameter("o_id", o_id) :
                new ObjectParameter("o_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Order_Delete", o_idParameter);
        }
    
        public virtual int Order_Insert(Nullable<int> o_id, Nullable<System.DateTime> order_date)
        {
            var o_idParameter = o_id.HasValue ?
                new ObjectParameter("o_id", o_id) :
                new ObjectParameter("o_id", typeof(int));
    
            var order_dateParameter = order_date.HasValue ?
                new ObjectParameter("order_date", order_date) :
                new ObjectParameter("order_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Order_Insert", o_idParameter, order_dateParameter);
        }
    
        public virtual int Order_Update(Nullable<int> o_id, Nullable<System.DateTime> order_date)
        {
            var o_idParameter = o_id.HasValue ?
                new ObjectParameter("o_id", o_id) :
                new ObjectParameter("o_id", typeof(int));
    
            var order_dateParameter = order_date.HasValue ?
                new ObjectParameter("order_date", order_date) :
                new ObjectParameter("order_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Order_Update", o_idParameter, order_dateParameter);
        }
    
        public virtual int OrderItem_Delete(Nullable<int> order_id, Nullable<int> product_id)
        {
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderItem_Delete", order_idParameter, product_idParameter);
        }
    
        public virtual int OrderItem_Insert(Nullable<int> order_id, Nullable<int> product_id, Nullable<decimal> amount, Nullable<decimal> price)
        {
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderItem_Insert", order_idParameter, product_idParameter, amountParameter, priceParameter);
        }
    
        public virtual int OrderItem_Update(Nullable<int> order_id, Nullable<int> product_id, Nullable<decimal> amount, Nullable<decimal> price)
        {
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderItem_Update", order_idParameter, product_idParameter, amountParameter, priceParameter);
        }
    
        public virtual int Product_Delete(Nullable<int> p_id)
        {
            var p_idParameter = p_id.HasValue ?
                new ObjectParameter("p_id", p_id) :
                new ObjectParameter("p_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Product_Delete", p_idParameter);
        }
    
        public virtual int Product_Insert(Nullable<int> p_id, string p_name, Nullable<decimal> price)
        {
            var p_idParameter = p_id.HasValue ?
                new ObjectParameter("p_id", p_id) :
                new ObjectParameter("p_id", typeof(int));
    
            var p_nameParameter = p_name != null ?
                new ObjectParameter("p_name", p_name) :
                new ObjectParameter("p_name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Product_Insert", p_idParameter, p_nameParameter, priceParameter);
        }
    
        public virtual int Product_Update(Nullable<int> p_id, string p_name, Nullable<decimal> price)
        {
            var p_idParameter = p_id.HasValue ?
                new ObjectParameter("p_id", p_id) :
                new ObjectParameter("p_id", typeof(int));
    
            var p_nameParameter = p_name != null ?
                new ObjectParameter("p_name", p_name) :
                new ObjectParameter("p_name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Product_Update", p_idParameter, p_nameParameter, priceParameter);
        }
    }
}
